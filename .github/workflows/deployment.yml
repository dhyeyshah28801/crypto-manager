name: CI

on:
  push:
    branches:
      - main

jobs:
  pre-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [test, preprod, prod]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set AWS Environment
        run: |
          chmod +x ./scripts/setAWSEnvironment.sh
          ./scripts/setAWSEnvironment.sh

      - name: Fetch CLIENT_ID from SSM
        id: fetch_client_id
        run: |
          if [[ "${{ matrix.environment }}" == "test" ]]; then
            SSM_VAL=$(aws ssm get-parameter --name "/dcapps/etl/test/ns/auth/client/key" --with-decryption --query "Parameter.Value" --output text --profile wickes-sls-preprod --region eu-west-1)
          elif [[ "${{ matrix.environment }}" == "preprod" ]]; then
            SSM_VAL=$(aws ssm get-parameter --name "/dcapps/etl/preprod/ns/auth/client/key" --with-decryption --query "Parameter.Value" --output text --profile wickes-sls-preprod --region eu-west-1)
          fi
          echo "Fetched CLIENT_ID from SSM = $SSM_VAL"
          echo "VUE_APP_AUTH_CLIENT_ID=$SSM_VAL" > .env

      - name: Upload .env file
        uses: actions/upload-artifact@v4
        with:
          name: .env
          path: .env

  build:
    runs-on: ubuntu-latest
    needs: pre-build
    strategy:
      matrix:
        environment: [test, preprod, prod]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          yarn audit --level critical --groups dependencies
          yarn install

      - name: Build Project
        run: |
          chmod +x ./scripts/setAWSEnvironment.sh
          ./scripts/setAWSEnvironment.sh
          if [[ "${{ matrix.environment }}" == "test" ]]; then
            yarn build:test
          elif [[ "${{ matrix.environment }}" == "preprod" ]]; then
            yarn build:preprod
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        environment: [test, preprod, prod]
    steps:
      - name: checkout code
        run: echo 'Deployment'
      # - name: Checkout code
      #   uses: actions/checkout@v4

      # - name: Set AWS Environment
      #   run: |
      #     chmod +x ./scripts/setAWSEnvironment.sh
      #     ./scripts/setAWSEnvironment.sh

      # - name: Deploy
      #   run: |
      #     if [[ "${{ matrix.environment }}" == "test" ]]; then
      #       yarn deploy:test
      #     elif [[ "${{ matrix.environment }}" == "preprod" ]]; then
      #       yarn deploy:preprod
      #     elif [[ "${{ matrix.environment }}" == "prod" ]]; then
      #       yarn deploy:prod
      #     fi
